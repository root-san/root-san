openapi: 3.0.0
info:
  title: root-san API
  version: 1.0.0
  description: 割り勘アプリ
servers:
  - url: http://localhost:8080
paths:
  /rooms:
    post:
      summary: create room
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
      operationId: createRoom
  /rooms/{roomId}:
    get:
      summary: get room
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomDetails'
      operationId: getRoom
  /rooms/{roomId}/member:
    post:
      summary: add member to room
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
      operationId: addMember
  /rooms/{roomId}/member/{memberId}:
    delete:
      summary: delete member from room
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
        - name: memberId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
      operationId: deleteMember
  /rooms/{roomId}/event:
    post:
      summary: add event to room
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequestBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      operationId: addEvent
  /rooms/{roomId}/event/{eventId}:
    put:
      summary: edit event of room
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequestBody'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
      operationId: editEvent
    delete:
      summary: delete event from room
      parameters:
        - name: roomId
          in: path
          required: true
          schema:
            type: string
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No content
      operationId: deleteEvent
components:
  schemas:
    Room:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    RoomDetails:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result'
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - members
        - events
        - results
        - createdAt
    Member:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    EventRequestBody:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        eventType:
          $ref: "#/components/schemas/eventType"
        amount:
          type: integer
          description: "支払い合計金額"
        eventAt:
          type: string
          format: date-time
          description: "イベント発生日時"
        txns:
          type: array
          items:
            $ref: "#/components/schemas/Txn"
          description: "そのイベント内における人同士のお金のやり取り"
      required:
        - id
        - name
        - eventType
        - amount
        - eventAt
        - txns
    eventType:
      type: string
      enum:
        - outer
        - inner
    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        eventType:
          $ref: "#/components/schemas/eventType"
        amount:
          type: integer
          description: "支払い合計金額"
        eventAt:
          type: string
          format: date-time
          description: "イベント発生日時"
        txns:
          type: array
          items:
            $ref: "#/components/schemas/Txn"
          description: "そのイベント内における人同士のお金のやり取り"
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - eventType
        - amount
        - eventAt
        - txns
        - createdAt
    Txn:
      type: object
      properties:
        amount:
          type: integer
        receiver:
          type: string
          format: uuid
        payer:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
      required:
        - amount
        - receiver
        - payer
        - id
    Result:
      type: object
      properties:
        amount:
          type: integer
        receiver:
          type: string
          format: uuid
        payer:
          type: string
          format: uuid
      required:
        - amount
        - receiver
        - payer
